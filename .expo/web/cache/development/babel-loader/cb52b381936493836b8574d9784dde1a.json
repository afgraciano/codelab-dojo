{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport TodoList from \"../../components/TodoList\";\nimport Button from \"../../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 1),\n      date = _useState2[0];\n\n  var navigation = useNavigation();\n  var handlePress = useCallback(function () {\n    navigation.navigate('NewTodoScreen');\n  }, []);\n  return _jsxs(View, {\n    style: styles.homeContainer,\n    children: [_jsxs(View, {\n      style: styles.homeHeader,\n      children: [_jsxs(View, {\n        style: styles.homeHeaderDate,\n        children: [_jsx(Text, {\n          style: styles.homeHeaderDateDay,\n          children: date.toLocaleDateString('co-CO', {\n            day: 'numeric'\n          })\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.homeHeaderDateMonthYear,\n            children: date.toLocaleDateString('co-CO', {\n              month: 'long'\n            })\n          }), _jsx(Text, {\n            style: styles.homeHeaderDateMonthYear,\n            children: date.toLocaleDateString('co-CO', {\n              year: 'numeric'\n            })\n          })]\n        })]\n      }), _jsx(Text, {\n        style: styles.homeHeaderDateMonthYear,\n        children: date.toLocaleDateString('co-CO', {\n          weekday: 'long'\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.homeTodoListHeader,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.homeTodoListHeaderText,\n          children: \"Mis tareas\"\n        }), _jsx(Button, {\n          buttonText: \"Nueva tarea\",\n          onPress: handlePress\n        })]\n      }), _jsx(TodoList, {})]\n    })]\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  homeContainer: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  homeHeader: {\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  homeHeaderDate: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  homeHeaderDateDay: {\n    marginRight: 10,\n    fontSize: 40,\n    color: '#676a73',\n    fontWeight: 'bold'\n  },\n  homeHeaderDateMonthYear: {\n    fontSize: 15,\n    textTransform: 'capitalize',\n    color: '#676a73'\n  },\n  homeTodoListHeader: {\n    padding: 20\n  },\n  homeTodoListHeaderText: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#676a73'\n  }\n});","map":{"version":3,"sources":["G:/disco portatil 5 gigas/Mis Documentos/AndroidStudioProjects/reactnavite/src/screens/Home/index.jsx"],"names":["useState","useCallback","useNavigation","TodoList","Button","HomeScreen","Date","date","navigation","handlePress","navigate","styles","homeContainer","homeHeader","homeHeaderDate","homeHeaderDateDay","toLocaleDateString","day","homeHeaderDateMonthYear","month","year","weekday","homeTodoListHeader","homeTodoListHeaderText","StyleSheet","create","flex","backgroundColor","padding","flexDirection","justifyContent","alignItems","marginRight","fontSize","color","fontWeight","textTransform"],"mappings":"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","sourcesContent":["//import { View, Text } from 'react-native';\r\nimport { useState, useCallback } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport TodoList from '../../components/TodoList';\r\nimport Button from '../../components/Button';\r\n\r\n\r\nconst HomeScreen = () => {\r\n  const [date] = useState(new Date());\r\n  const navigation = useNavigation();\r\n\r\n  const handlePress = useCallback(() => {\r\n    navigation.navigate('NewTodoScreen');\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.homeContainer}>\r\n      <View style={styles.homeHeader}>\r\n        <View style={styles.homeHeaderDate}>\r\n          <Text style={styles.homeHeaderDateDay}>\r\n            {date.toLocaleDateString('co-CO', { day: 'numeric' })}\r\n          </Text>\r\n          <View>\r\n            <Text style={styles.homeHeaderDateMonthYear}>\r\n              {date.toLocaleDateString('co-CO', { month: 'long' })}\r\n            </Text>\r\n            <Text style={styles.homeHeaderDateMonthYear}>\r\n              {date.toLocaleDateString('co-CO', { year: 'numeric' })}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <Text style={styles.homeHeaderDateMonthYear}>\r\n          {date.toLocaleDateString('co-CO', { weekday: 'long' })}\r\n        </Text>\r\n      </View>\r\n      <View style={styles.homeTodoListHeader}>\r\n        <View>\r\n          <Text style={styles.homeTodoListHeaderText}>Mis tareas</Text>\r\n          <Button buttonText=\"Nueva tarea\" onPress={handlePress} />\r\n        </View>\r\n        <TodoList />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  homeContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  homeHeader: {\r\n    padding: 20,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  homeHeaderDate: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  homeHeaderDateDay: {\r\n    marginRight: 10,\r\n    fontSize: 40,\r\n    color: '#676a73',\r\n    fontWeight: 'bold',\r\n  },\r\n  homeHeaderDateMonthYear: {\r\n    fontSize: 15,\r\n    textTransform: 'capitalize',\r\n    color: '#676a73',\r\n  },\r\n  homeTodoListHeader: {\r\n    padding: 20,\r\n  },\r\n  homeTodoListHeaderText: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#676a73',\r\n  },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}