{"ast":null,"code":"import { useCallback, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Controller, useForm } from 'react-hook-form';\nimport { useNavigation } from '@react-navigation/native';\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport { TodoContext } from \"../../context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NewTodoScreen = function NewTodoScreen() {\n  var _useContext = useContext(TodoContext),\n      addTodo = _useContext.addTodo;\n\n  var navigation = useNavigation();\n\n  var _useForm = useForm({\n    defaultValues: {\n      todoTitle: ''\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors,\n      reset = _useForm.reset;\n\n  var onSubmit = useCallback(function (data) {\n    addTodo(data.todoTitle);\n    navigation.navigate('HomeScreen');\n    reset();\n  }, []);\n  return _jsxs(View, {\n    style: styles.newTodoContainer,\n    children: [_jsx(Text, {\n      style: styles.newTodoTitle,\n      children: \"Nueva tarea\"\n    }), _jsx(Text, {\n      style: styles.newTodoLabel,\n      children: \"Titulo de la tarea\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true\n      },\n      render: function render(_ref) {\n        var _ref$field = _ref.field,\n            onChange = _ref$field.onChange,\n            onBlur = _ref$field.onBlur,\n            value = _ref$field.value;\n        return _jsx(Input, {\n          value: value,\n          onBlur: onBlur,\n          onChangeText: function onChangeText(value) {\n            return onChange(value);\n          },\n          error: errors.todoTitle ? true : false\n        });\n      },\n      name: \"todoTitle\"\n    }), errors.todoTitle && _jsx(Text, {\n      style: styles.newTodoErrorText,\n      children: \"Este campo es requerido.\"\n    }), _jsx(Button, {\n      buttonText: \"Crear tarea\",\n      onPress: handleSubmit(onSubmit)\n    })]\n  });\n};\n\nexport default NewTodoScreen;\nvar styles = StyleSheet.create({\n  newTodoContainer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  newTodoTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#676a73',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  newTodoLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#676a73',\n    marginBottom: 10\n  },\n  newTodoErrorText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#ff3e3e'\n  }\n});","map":{"version":3,"sources":["G:/disco portatil 5 gigas/Mis Documentos/AndroidStudioProjects/reactnavite/Dojo-React-Native/src/screens/NewTodo/index.jsx"],"names":["useCallback","useContext","Controller","useForm","useNavigation","Input","Button","TodoContext","NewTodoScreen","addTodo","navigation","defaultValues","todoTitle","control","handleSubmit","errors","formState","reset","onSubmit","data","navigate","styles","newTodoContainer","newTodoTitle","newTodoLabel","required","field","onChange","onBlur","value","newTodoErrorText","StyleSheet","create","flex","backgroundColor","padding","fontSize","fontWeight","color","textAlign","marginBottom"],"mappings":"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","sourcesContent":["//import { View, Text } from 'react-native';\r\n\r\nimport { useCallback, useContext } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport { TodoContext } from '../../context';\r\n\r\n\r\nconst NewTodoScreen = () => {\r\n  const { addTodo } = useContext(TodoContext);\r\n  const navigation = useNavigation();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    defaultValues: {\r\n      todoTitle: '',\r\n    },\r\n  });\r\n\r\n  const onSubmit = useCallback(data => {\r\n    addTodo(data.todoTitle);\r\n    navigation.navigate('HomeScreen');\r\n    reset();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.newTodoContainer}>\r\n      <Text style={styles.newTodoTitle}>Nueva tarea</Text>\r\n      <Text style={styles.newTodoLabel}>Titulo de la tarea</Text>\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Input\r\n            value={value}\r\n            onBlur={onBlur}\r\n            onChangeText={value => onChange(value)}\r\n            error={errors.todoTitle ? true : false}\r\n          />\r\n        )}\r\n        name=\"todoTitle\"\r\n      />\r\n      {errors.todoTitle && (\r\n        <Text style={styles.newTodoErrorText}>Este campo es requerido.</Text>\r\n      )}\r\n      <Button buttonText=\"Crear tarea\" onPress={handleSubmit(onSubmit)} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default NewTodoScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  newTodoContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    padding: 20,\r\n  },\r\n  newTodoTitle: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#676a73',\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  newTodoLabel: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#676a73',\r\n    marginBottom: 10,\r\n  },\r\n  newTodoErrorText: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#ff3e3e',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}